"There exists a staircase with N steps, and you can climb up either 1 or 2 steps at a time."
"Given N, write a function that returns the number of unique ways you can climb the staircase. The order of the steps matters."
"For example, if N is 4, then there are 5 unique ways:"
1, 1, 1, 1  -  2, 1, 1  -  1, 2, 1  -  1, 1, 2  -  2, 2
"What if, instead of being able to climb 1 or 2 steps at a time, you could climb any number from a set of positive integers X?"
"For example, if X = {1, 3, 5}, you could climb 1, 3, or 5 steps at a time."

def waysClimbUp(n):
    if n <= 0:
        return -1
    elif n <= 2:
        return n
    index2 = 1
    index1 = 2
    for i in range(n-2, 0, -1):
        index = index2 + index1
        index2 = index1
        index1 = index
    return index

def waysClimbUpDSteps(n, steps):
    steps.sort()
    if n < steps[0]:
        return 0
    elif n == steps[0]:
        return 1
    ways = [0]*n

    k = 0
    for i in range(len(ways)-1, -1, -1):
        if k < len(steps) and  (len(ways) - i) == steps[k]:
            ways[i] = 1
            k = k + 1
        for j in range(len(steps)):
            if i + steps[j] >= len(ways):
                break
            else:
                ways[i] = ways[i] + ways[i + steps[j]]
    #print(steps)
    #print(ways)
    return ways[0]

steps = [6, 3, 1, 2] #Aquí se puede modificar al número de pasos que se quieran
n = 5 #Aquí se modifica el número de escalones
print(waysClimbUpDSteps(n, steps))